import heapq

with open("input 16.txt") as file:
    data = file.read().strip()

dirs = [(-1, 0), (0, 1), (1, 0), (0, -1)]
g = data.split('\n')
r, c = len(g), len(g[0])
g = [[g[row][col] for col in range(c)] for row in range(r)]

for row in range(r):
    for col in range(c):
        if g[row][col] == 'S':
            sr, sc = row, col
        if g[row][col] == 'E':
            er, ec = row, col

q = []
s = set()
heapq.heappush(q, (0, sr, sc, 1))
d1 = {}
b = None
while q:
    dist, row, col, dir = heapq.heappop(q)
    if (row, col, dir) not in d1:
        d1[(row, col, dir)] = dist
    if row == er and col == ec and b is None:
        b = dist
    if (row, col, dir) in s:
        continue
    s.add((row, col, dir))
    dr, dc = dirs[dir]
    rr, cc = row + dr, col + dc
    if 0 <= cc < c and 0 <= rr < r and g[rr][cc] != '#':
        heapq.heappush(q, (dist + 1, rr, cc, dir))
    heapq.heappush(q, (dist + 1000, row, col, (dir + 1) % 4))
    heapq.heappush(q, (dist + 1000, row, col, (dir + 3) % 4))

print(b)

q = []
s = set()
for dir in range(4):
    heapq.heappush(q, (0, er, ec, dir))

d2 = {}
while q:
    dist, row, col, dir = heapq.heappop(q)
    if (row, col, dir) not in d2:
        d2[(row, col, dir)] = dist
    if (row, col, dir) in s:
        continue
    s.add((row, col, dir))
    dr, dc = dirs[(dir + 2) % 4]
    rr, cc = row + dr, col + dc
    if 0 <= cc < c and 0 <= rr < r and g[rr][cc] != '#':
        heapq.heappush(q, (dist + 1, rr, cc, dir))
    heapq.heappush(q, (dist + 1000, row, col, (dir + 1) % 4))
    heapq.heappush(q, (dist + 1000, row, col, (dir + 3) % 4))

ok = set()
for row in range(r):
    for col in range(c):
        for dir in range(4):
            if (row, col, dir) in d1 and (row, col, dir) in d2 and d1[(row, col, dir)] + d2[(row, col, dir)] == b:
                ok.add((row, col))

print(len(ok))
