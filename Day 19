def poss(design, patterns, memo):
    if design in memo: return memo[design]
    if not design: return True
    memo[design] = any(poss(design[len(pt):], patterns, memo) for pt in patterns if design.startswith(pt))
    return memo[design]

def count(design, patterns, memo):
    if design in memo: return memo[design]
    if not design: return 1
    memo[design] = sum(count(design[len(pt):], patterns, memo) for pt in patterns if design.startswith(pt))
    return memo[design]

with open("input 19.txt") as file:
    data = [line.strip("\n") for line in file]

patterns, designs = data[0].split(", "), [line for line in data[2:]]
print(sum(poss(d, patterns, {}) for d in designs), sum(count(d, patterns, {}) for d in designs))
